   int[] reg = new int[6];

    // self test section. 
    do
    {
        reg[4] = 123;       //	0	seti 123 0 4
        reg[4] &= 456;      //	1	bani 4 456 4
                            //	2	eqri 4 72 4
                            //	3	addr 4 5 5
                            //	4	seti 0 0 5
    } while (reg[4] != 72);
    reg[4] = 0;              //	5	seti 0 0 4

    do
    {
        reg[3] = reg[4] | 65536;        //	6	bori 4 65536 3
        reg[4] = 4332021;               //	7	seti 4332021 _ 4

        do
        {
            reg[2] = reg[3] & 255;          //	8	bani 3 255 2
            reg[4] += reg[2];               //	9	addr 4 2 4
            reg[4] &= 16777215;             //	10	bani 4 16777215 4
            reg[4] *= 65899;                //	11	muli 4 65899 4
            reg[4] &= 16777215;             //	12	bani 4 16777215 4

            //	13	gtir 256 3 2 
            //	14	addr 2 5 5
            if (256 > reg[3])
            {
                // if true jump to line 28
                break;              //	16	seti 27 _ 5 
            }
            // 15	addi 5 1 5
            // else continue with line 17 

            //this is a fancy way to do division
            reg[2] = 0;                         //	17	seti 0 _ 2
            do
            {
                reg[1] = reg[2] + 1;            //	18	addi 2 1 1
                reg[1] *= 256;                  //	19	muli 1 256 1

                //	20	gtrr 1 3 1
                //	21	addr 1 5 5
                if (reg[1] > reg[3])
                {
                    // if true jump to line 26
                    break;  //	23	seti 25 _ 5
                }
                // else continue with line 24
                //	22	addi 5 1 5
                reg[2] += 1;                //	24	addi 2 1 2
            } while (true); //	25	seti 17 _ 5
            reg[3] = reg[2];            //	26	setr 2 _ 3
        } while (true);     //	27	seti 7 _ 5

        //program break test 
        //	28	eqrr 4 0 2
        //	29	addr 2 5 5  // jumps out of bounds if line 28 returns 1
        //	30	seti 5 _ 5
    } while (reg[4] != reg[0]);